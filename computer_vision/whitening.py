# -*- coding: utf-8 -*-
"""whitening.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1FgkcssASivX8rSJhrVvfWB8Csa1AK_ob
"""

#Nick Peters
#02/14/22
from PIL import Image
from PIL import ImageFilter
from PIL import ImageDraw
import numpy as np
import matplotlib.pyplot as plt

from google.colab import drive
drive.mount('/content/drive')



img= Image.open('/content/drive/MyDrive/cs195_sp22/input_images/first_photograph.png')

#sum of the value of the pixels
img_mean = 0.0
for x in range(img.width):
  for y in range(img.height):
    img_mean += img.getpixel((x,y))

#mean
img_mean = img_mean/(img.width * img.height)
print("image mean:",img_mean)

#numerator of variance formula
img_variance = 0.0
for x in range(img.width):
  for y in range(img.height):
    img_variance += (img.getpixel((x,y)) - img_mean)**2

#variance
img_variance = img_variance/(img.width * img.height)
print("image variance:",img_variance)

#standard deviation
img_std = np.sqrt(img_variance)
print("image standard deviation:",img_std)

#create new image and uses whitening transformation
img_whiten = Image.new('L', (img.width,img.height), color=0)
for x in range(img.width):
  for y in range (img.height):
    temp = (img.getpixel((x,y)) - img_mean)/img_std
    img_whiten.putpixel((x,y), int(temp))

plt.figure(figsize=(8,8))
plt.imshow(img, cmap='gray')
plt.title('Oringinal Phtoto')

plt.figure(figsize=(8,8))
plt.imshow(img_whiten, cmap='gray')
plt.title('Whitened Photo')

new_img_mean = 0.0
for x in range(img.width):
  for y in range(img.height):
    new_img_mean += img_whiten.getpixel((x,y))

new_img_mean = new_img_mean/(img.width*img.height)
print("new image mean:", round(new_img_mean))

new_img_variance =0.0
for x in range(img.width):
  for y in range(img.height):
    new_img_variance += (img_whiten.getpixel((x,y)) - new_img_mean)**2

new_img_variance = new_img_variance/(img.width*img.height)
print("new image variance:", round(new_img_variance))